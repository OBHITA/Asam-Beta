@using Asam.Ppc.Service.Messages.Organization
@using Pillar.Common.Utility
@model OrganizationDto

@{
    Layout = "~/Views/SystemAdmin/Layout.cshtml";
    ViewBag.Title = "Edit Organization";
}

<div class="organization-editor">
    @using (Html.BeginForm("EditOrganization", "SystemAdmin", new { id = Model.Key }))
    {
        <div>
            @Html.LabelFor(m => m.Name)
        </div>
        <div>
            @Html.TextBoxFor(m => m.Name, new { placeholder = Html.DisplayNameFor(m => m.Name) })
            <div class="clear"></div>
        </div>
        <input type="submit" value="Save" />
    }
    @{
        var addressesPropertyName = PropertyUtil.ExtractPropertyName(() => Model.OrganizationAddresses);
        var organizationAddressDto = new OrganizationAddressDto();
    }
    <div class="list @addressesPropertyName">
        <div class="header">
            <h5>Addresses</h5>
        </div>
        <div class="clear"></div>
        <hr/>
        <ul>
            @foreach (var subModel in Model.OrganizationAddresses)
            {
                <li>
                    <div>
                        @using (Html.BeginForm("EditOrganization", "SystemAdmin", new { id = Model.Key }))
                        {
                            @Html.EditorFor(m => subModel, null, "organizationAddressDto")
                            <div class="clear"></div>
                            <input type="submit" value="Save" />
                        }
                    </div>
                </li>
            }
        </ul>
        <input id="add-address-btn" type="button" value="Add Address" />
        <div class="add-address-wrapper">
            <hr />
            <h5>Add New</h5>
            @using (Html.BeginForm("AddAddress", "SystemAdmin", new { id = Model.Key }))
            {
                @Html.EditorFor(m => organizationAddressDto)
                <div class="clear"></div>
                <input type="submit" value="Create" />
            }
            <hr />
        </div>
        <div class="clear"></div>
    </div>
    @{
        var phonesPropertyName = PropertyUtil.ExtractPropertyName(() => Model.OrganizationPhones);
        var organizationPhoneDto = new OrganizationPhoneDto();
    }
    <div class="list @phonesPropertyName">
        <div class="header">
            <h5>Phones</h5>
        </div>
        <div class="clear"></div>
        <hr/>
        <ul>
            @foreach (var subModel in Model.OrganizationPhones)
            {
                <li>
                    <div>
                        @using (Html.BeginForm("EditOrganization", "SystemAdmin", new { id = Model.Key }))
                        {
                            @Html.EditorFor(m => subModel, null, "organizationPhoneDto")
                            <div class="clear"></div>
                            <input type="submit" value="Save" />
                        }
                    </div>
                </li>
            }
        </ul>
        <input id="add-phone-btn" type="button" value="Add Phone" />
        <div class="add-phone-wrapper">
            <hr />
            <h5>Add New</h5>
            @using (Html.BeginForm("AddPhone", "SystemAdmin", new { id = Model.Key }))
            {
                @Html.EditorFor(m => organizationPhoneDto)
                <div class="clear"></div>
                <input type="submit" value="Create" />
            }
            <hr />
        </div>
        <div class="clear"></div>
    </div>
    <div>
        <div class="header">
            <h5>Organization Admin</h5>
        </div>
        <hr />
        <input id="add-orgAdmin-btn" type="button" value="Add Organization Admin" />
        <div class="add-orgAdmin-wrapper">
            @using (Html.BeginForm( "CreateOrganizationAdmin", "SystemAdmin", new { id = Model.Key }))
            {
                <div>
                    @Html.Label( "username", "Username" )
                </div>
                <div>
                    @Html.TextBox( "username" )
                </div>
                <div>
                    @Html.Label( "email", "Email" )
                </div>
                <div>
                    @Html.TextBox( "email", null, new { type = "email" } )
                </div>
                <div class="clear"></div>
                <input type="submit" value="Create" />
            }
        </div>
    </div>
</div>


@section scripts
{
    <script>
        $(document).ready(function() {
            var formDirty = false;
            $('.organization-editor input[type=submit]').hide();
            $('.organization-editor .add-address-wrapper').hide();
            $('.organization-editor .add-phone-wrapper').hide();
            $('.organization-editor .add-orgAdmin-wrapper').hide();

            $('.organization-editor').on('change keypress', ':input', function() {
                if (!formDirty) {
                    formDirty = true;
                    $(this).closest('form').find('input[type=submit]').show();
                }
            });

            $("form").on('click', ':submit', function () {
                formDirty = false;
            });

            $(window).bind('beforeunload', function() {
                if (formDirty) {
                    return "You will lose all pending changes...";
                }
                return undefined;
            });

            $('#add-address-btn').click(function() {
                $('.organization-editor .add-address-wrapper').toggle();
            });

            $('#add-phone-btn').click(function() {
                $('.organization-editor .add-phone-wrapper').toggle();
            });

            $('#add-orgAdmin-btn').click(function () {
                $('.organization-editor .add-orgAdmin-wrapper').toggle();
            });
        });
    </script>
}